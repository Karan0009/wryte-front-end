{"version":3,"sources":["components/commonComponents/Button/Button.js","components/commonComponents/nav/nav.jsx","components/genre/genre.jsx","components/genres/genres.jsx","components/writingCard/writing.jsx","components/writings/writings.jsx","components/commonComponents/alert/alert.jsx","components/commonComponents/input/input.js","pages/write/write.jsx","pages/profile/profile.jsx","pages/singleWritingPage/singleWritingPage.js","utils/validators.js","pages/signup/signUp.jsx","pages/login/login.jsx","App.js","serviceWorker.js","index.js"],"names":["button","props","link","className","classes","join","to","children","design","mode","onClick","disabled","loading","type","Nav","state","serachQuery","searchHandler","console","log","profileHandler","isAuth","name","this","appName","placeholder","id","e","Component","Genre","useState","genreName","_id","SampleNextArrow","style","display","background","color","SamplePrevArrow","Genres","genres","setGenres","useEffect","settings","slidesToShow","swipeToSlide","dragToSlide","nextArrow","prevArrow","map","genre","key","Writing","title","text","src","alt","Writings","writings","writing","alert","role","width","left","top","position","zIndex","alertMessage","data-dismiss","aria-label","alertMessageHandler","aria-hidden","Input","label","htmlFor","valid","onChange","options","value","touched","onBlur","minLength","min","maxLength","max","WritePage","inputChangeHandler","event","tags","target","content","setState","handleTagsInput","tag","slice","div","document","createElement","p","span","addEventListener","index","indexOf","parentNode","firstChild","innerHTML","splice","parentElement","remove","trim","push","classList","appendChild","publishWritingHandler","preventDefault","split","setAlertMessage","catchError","error","redirectToLogin","fetch","method","then","res","status","Error","json","resData","catch","onSubmit","Profile","SingleWritingPage","match","params","writingId","required","length","config","isValid","email","test","SignupPage","signupForm","validators","validator","formIsValid","inputId","inputFileHandler","errors","profilePicture","files","toLowerCase","checkMimeType","err","inputBlurHandler","firstName","lastName","username","password","textAlign","signupHandler","LoginPage","user","targetId","loginHandler","App","isAlerted","errorHandler","msg","authData","history","formData","FormData","append","axios","post","data","replace","userId","token","exact","path","render","component","ProfilePage","searchQuery","withRouter","Boolean","window","location","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4jBAyBeA,G,MApBA,SAACC,GAAD,OACZA,EAAMC,KAcL,kBAAC,IAAD,CAAMC,UAAW,CAAC,GAAD,OAAIF,EAAMG,UAAWC,KAAK,KAAMC,GAAIL,EAAMC,MACxDD,EAAMM,UAdT,4BACEJ,UAAW,CAAC,WAAD,OACEF,EAAMO,QADR,kBAEEP,EAAMQ,MAFR,UAGNR,EAAMG,UACTC,KAAK,KACPK,QAAST,EAAMS,QACfC,SAAUV,EAAMU,UAAYV,EAAMW,QAClCC,KAAMZ,EAAMY,MAEXZ,EAAMW,QAAU,aAAeX,EAAMM,YC+C7BO,G,iNAzDbC,MAAQ,CACNC,YAAa,Q,EAGfC,cAAgB,WACdC,QAAQC,IAAI,U,EAGdC,eAAiB,WAEf,OADe,EAAKnB,MAAMoB,OAEjB,CAAEnB,KAAM,WAAYoB,KAAM,WAE1B,CAAEpB,KAAM,SAAUoB,KAAM,U,wEAIzB,IAAD,OACP,OACE,yBAAKnB,UAAU,8BAIb,kBAAC,EAAD,CAAQD,KAAK,IAAIE,QAAQ,sBACtBmB,KAAKtB,MAAMuB,SAEd,yBAAKrB,UAAU,0BACb,0BAAMA,UAAU,mBACd,2BACEU,KAAK,OACLV,UAAU,eACVsB,YAAY,iBACZC,GAAG,WAEL,kBAAC,EAAD,CACExB,KAAI,kBAAaqB,KAAKR,MAAMC,aAC5BZ,QAAQ,iBACRM,QAAS,SAACiB,GAAD,OAAO,EAAKV,cAAcU,KAEnC,uBAAGxB,UAAU,oBAInB,kBAAC,EAAD,CACED,KAAMqB,KAAKH,iBAAiBlB,KAC5BE,QAAQ,uCAEPmB,KAAKH,iBAAiBE,MAEzB,kBAAC,EAAD,CAAQpB,KAAK,SAASE,QAAQ,mCAA9B,c,GAlDUwB,c,iCCwBHC,G,kBAzBD,SAAC5B,GAAW,IAAD,EACC6B,mBAAS7B,EAAM8B,WADhB,mBAChBT,EADgB,UAgBvB,OACE,kBAAC,IAAD,CAAMnB,UAAU,sBAAsBG,GAAIL,EAAM+B,KAC9C,yBAAK7B,UAJK,cAKR,uBAAGA,UAAU,cAAcmB,O,MCbnC,SAASW,EAAgBhC,GAAQ,IACvBE,EAA8BF,EAA9BE,UAAW+B,EAAmBjC,EAAnBiC,MAAOxB,EAAYT,EAAZS,QAC1B,OACE,yBACEP,UAAWA,EACX+B,MAAK,eAAOA,EAAP,CAAcC,QAAS,QAASC,WAAY,MAAOC,MAAO,UAC/D3B,QAASA,IAKf,SAAS4B,EAAgBrC,GAAQ,IACvBE,EAA8BF,EAA9BE,UAAW+B,EAAmBjC,EAAnBiC,MAAOxB,EAAYT,EAAZS,QAC1B,OACE,yBACEP,UAAWA,EACX+B,MAAK,eAAOA,EAAP,CAAcC,QAAS,QAASC,WAAY,UACjD1B,QAASA,IAKf,IAuDe6B,EAvDA,SAACtC,GAAW,IAAD,EACI6B,mBAAS7B,EAAMuC,QADnB,mBACjBA,EADiB,KACTC,EADS,OAEEX,mBAAS,MAFX,6BAMxBY,qBAAU,WACRD,EAAUxC,EAAMuC,WAkBlBE,qBAAU,WACRxB,QAAQC,IAAIqB,MAGd,IAAIG,EAAW,CACbC,aAAc,EACdC,cAAc,EACdC,aAAa,EACbC,UAAW,kBAACd,EAAD,MACXe,UAAW,kBAACV,EAAD,OAGb,OACE,6BACE,yBAAKnC,UAAU,cACb,kBAAC,IAAWwC,EACTH,EAAOS,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,CAAOC,IAAKD,EAAM5B,KAAMU,IAAKkB,EAAMlB,IAAKD,UAAWmB,EAAM5B,cCvCtD8B,G,kBA7Bb,WAAYnD,GAAQ,qEACZA,I,sEAIN,OACE,yBAAKE,UAAU,eACb,wBAAIA,UAAU,iBAAiBoB,KAAKtB,MAAMoD,OAC1C,uBAAGlD,UAAU,eAAeoB,KAAKtB,MAAMqD,MACvC,kBAAC,EAAD,CACElD,QAAQ,kCACRF,KAAI,aAAQqB,KAAKtB,MAAM+B,MAFzB,aAMA,yBAAK7B,UAAU,eACb,yBAAKA,UAAU,2BACb,yBACEoD,IAAI,6DACJC,IAAI,kBAGR,6C,GAvBY5B,cC8DP6B,G,iNA9Db1C,MAAQ,CACN2C,SAAU,CACR,CACE1B,IAAK,IACLqB,MAAO,SACPC,KACE,mFAEJ,CACEtB,IAAK,IACLqB,MAAO,SACPC,KAAM,2BAER,CACEtB,IAAK,KACLqB,MAAO,SACPC,KACE,mTAEJ,CACEtB,IAAK,KACLqB,MAAO,SACPC,KAAM,2BAER,CACEtB,IAAK,KACLqB,MAAO,SACPC,KAAM,2BAER,CACEtB,IAAK,MACLqB,MAAO,SACPC,KAAM,2BAER,CACEtB,IAAK,OACLqB,MAAO,SACPC,KAAM,2BAER,CACEtB,IAAK,MACLqB,MAAO,SACPC,KAAM,6B,wEAKV,OACE,yBAAKnD,UAAU,gBACZoB,KAAKR,MAAM2C,SAAST,KAAI,SAACU,GAAD,OACvB,kBAAC,EAAD,CACER,IAAKQ,EAAQ3B,IACbA,IAAK2B,EAAQ3B,IACbqB,MAAOM,EAAQN,MACfC,KAAMK,EAAQL,e,GAvDH1B,cC0BRgC,EA7BD,SAAC3D,GACb,OACE,kBAAC,WAAD,KACE,yBACEE,UAAU,kDACV0D,KAAK,QACL3B,MAAO,CACL4B,MAAO,MACPC,KAAM,MACNC,IAAK,MACLC,SAAU,WACVC,OAAQ,QAGV,gCAASjE,EAAMkE,cACf,4BACEtD,KAAK,SACLV,UAAU,QACViE,eAAa,QACbC,aAAW,QACX3D,QAAST,EAAMqE,qBAEf,0BAAMC,cAAY,QAAlB,YCoDKC,G,YAxED,SAACvE,GACb,MAAmB,WAAfA,EAAMY,KAEN,yBAAKV,UAAU,cACZF,EAAMwE,OAAS,2BAAOC,QAASzE,EAAMyB,IAAKzB,EAAMwE,OACjD,4BACEtE,UACEF,EAAM0E,MACF,CAAC,GAAD,OAAI1E,EAAMG,SAAV,gBAAqCC,KAAK,KAC1C,CAAC,GAAD,OAAIJ,EAAMG,SAAW,eAAgB,eAAeC,KAAK,KAE/DuE,SAAU3E,EAAM2E,SAChBtD,KAAMrB,EAAMqB,KACZZ,QAAST,EAAMS,SAEdT,EAAM4E,QAAQ5B,KAAI,SAACC,GAAD,OACjB,4BAAQC,IAAKD,EAAMlB,IAAKN,GAAIzB,EAAMyB,IAC/BwB,EAAM5B,WAMO,aAAfrB,EAAMY,KAEb,yBAAKV,UAAU,cACZF,EAAMwE,OAAS,2BAAOC,QAASzE,EAAMyB,IAAKzB,EAAMwE,OACjD,8BACEtE,UACEF,EAAM0E,MACF,CAAC,GAAD,OAAI1E,EAAMG,SAAV,gBAAqCC,KAAK,KAC1C,CAAC,GAAD,OAAIJ,EAAMG,SAAW,eAAgB,eAAeC,KAAK,KAE/DoB,YAAaxB,EAAMwB,YACnBmD,SAAU3E,EAAM2E,SAChBtD,KAAMrB,EAAMqB,KACZI,GAAIzB,EAAMyB,GACVoD,MAAO7E,EAAM6E,SAMjB,yBAAK3E,UAAU,cACZF,EAAMwE,OAAS,2BAAOC,QAASzE,EAAMyB,IAAKzB,EAAMwE,OACjD,2BACE5D,KAAMZ,EAAMY,KACZV,UAAW,CAAC,GAAD,OACNF,EAAMG,SADA,eAGTH,EAAM0E,MAAQ,QAAU,UACxB1E,EAAM8E,QAAU,UAAY,aAC5B1E,KAAK,KACPuE,SAAU3E,EAAM2E,SAChBlE,QAAST,EAAMS,QACfsE,OAAQ/E,EAAM+E,OACdvD,YAAaxB,EAAMwB,YACnBqD,MAAO7E,EAAM6E,MACbxD,KAAMrB,EAAMqB,KACZ2D,UAAWhF,EAAMiF,IACjBC,UAAWlF,EAAMmF,IACjB1D,GAAIzB,EAAMyB,QCgML2D,E,YAxPb,WAAYpF,GAAQ,IAAD,8BACjB,4CAAMA,KA6BRqF,mBAAqB,SAACC,GACpB,IAAI5B,EAAU,EAAK5C,MAAM4C,QACrB6B,EAAO,EAAKzE,MAAMyE,KACE,UAApBD,EAAME,OAAO/D,GACfiC,EAAQN,MAAQkC,EAAME,OAAOX,MACA,oBAApBS,EAAME,OAAO/D,GACtBiC,EAAQ+B,QAAUH,EAAME,OAAOX,MACF,UAApBS,EAAME,OAAO/D,GACtBiC,EAAQT,MAAQqC,EAAME,OAAOX,MACA,SAApBS,EAAME,OAAO/D,KACtB8D,EAAOD,EAAME,OAAOX,OAEtB,EAAKa,SAAS,CAAEhC,UAAS6B,UA1CR,EA6CnBI,gBAAkB,SAACL,GACjB,IAAI5B,EAAU,EAAK5C,MAAM4C,QACrBkC,EAAM,EAAK9E,MAAM8E,IAErB,GADAA,EAAMN,EAAME,OAAOX,MAEgB,MAAjCS,EAAME,OAAOX,MAAMgB,OAAO,IACO,OAAjCP,EAAME,OAAOX,MAAMgB,OAAO,GAC1B,CACA5E,QAAQC,IAAI,eACZ,IAAM4E,EAAMC,SAASC,cAAc,OAC7BC,EAAIF,SAASC,cAAc,KAC3BE,EAAOH,SAASC,cAAc,QACpCE,EAAKC,iBAAiB,SAAS,WAC7B,IAAMC,EAAQ1C,EAAQ6B,KAAKc,QACzBH,EAAKI,WAAWC,WAAWC,WAE7BvF,QAAQC,IAAIkF,GACZ,IAAMb,EAAO7B,EAAQ6B,KAAKkB,OAAOL,EAAO,GACxC1C,EAAQ6B,KAAOA,EACftE,QAAQC,IAAIwC,EAAQ6B,MACpBW,EAAKQ,cAAcC,SACnBrF,KAAKoE,SAAS,CAAEhC,eAElBuC,EAAEO,UAAYZ,EAAIgB,OAClBlD,EAAQ6B,KAAKsB,KAAKZ,EAAEO,WACpBN,EAAKM,UAAY,IACjBV,EAAIgB,UAAY,MAChBhB,EAAIiB,YAAYd,GAChBH,EAAIiB,YAAYb,GAChBZ,EAAME,OAAOc,WAAWS,YAAYjB,GACpCF,EAAM,GAER,EAAKF,SAAS,CAAEhC,UAASkC,SA7ER,EAiGnBoB,sBAAwB,SAAC1B,GACvBA,EAAM2B,iBACN,IAAI1B,EAAO,EAAKzE,MAAMyE,KACR,EAAKzE,MAAM4C,QACjB6B,KAAOA,EAAKqB,OAAOM,MAAM,KACjCjG,QAAQC,IAAI,EAAKJ,MAAM4C,SACvB,EAAKgC,SAAS,CACZhC,QAAS,CAAEN,MAAO,GAAIH,MAAO,GAAIwC,QAAS,GAAIF,KAAM,IACpDA,KAAM,KAER,EAAKvF,MAAMmH,gBAAgB,0BAC3B,EAAKnH,MAAMqE,uBA5GM,EA0InB+C,WAAa,SAACC,GACZpG,QAAQC,IAAImG,GACZ,EAAK3B,SAAS,CAAE2B,MAAOA,KA1IlB,EAAKrH,MAAMoB,QAAQ,EAAKpB,MAAMsH,kBACnC,EAAKxG,MAAQ,CACXyB,OAAQ,GACR8E,MAAO,KACP9B,KAAM,GACN7B,QAAS,CACPN,MAAO,GACPH,MAAO,GACPwC,QAAS,GACTF,KAAM,KAXO,E,iFAgBE,IAAD,OAClBgC,MAAM,mCAAoC,CACxCC,OAAQ,QAEPC,MAAK,SAACC,GACL,GAAmB,MAAfA,EAAIC,OAAgB,MAAM,IAAIC,MAAM,0BACxC,OAAOF,EAAIG,UAEZJ,MAAK,SAACK,GACL,EAAKpC,SAAS,CAAEnD,OAAQuF,EAAQvF,YAEjCwF,MAAMzG,KAAK8F,c,+BAoHN,IAAD,OACP,OACE,kBAAC,WAAD,KACE,yBAAKlH,UAAU,2BACb,0BAAM8H,SAAU,SAACtG,GAAD,OAAO,EAAKsF,sBAAsBtF,KAChD,kBAAC,EAAD,CACEd,KAAK,OACL4D,MAAM,QACN/C,GAAG,QACHtB,QAAQ,cACRqB,YAAY,mBACZyD,IAAI,IACJJ,MAAOvD,KAAKR,MAAM4C,QAAQN,MAC1BuB,SAAU,SAACjD,GAAD,OAAO,EAAK2D,mBAAmB3D,MAE3C,kBAAC,EAAD,CACEd,KAAK,SACLgE,QAAStD,KAAKR,MAAMyB,OACpBiC,MAAM,QACN/C,GAAG,QACHtB,QAAQ,cACRqB,YAAY,eACZyD,IAAI,IACJJ,MAAOvD,KAAKR,MAAM4C,QAAQT,MAC1BxC,QAAS,SAACiB,GAAD,OAAO,EAAK2D,mBAAmB3D,MAE1C,kBAAC,EAAD,CACEd,KAAK,OACL4D,MAAM,OACN/C,GAAG,OACHtB,QAAQ,aACR0E,MAAOvD,KAAKR,MAAMyE,KAClB/D,YAAY,sCACZmD,SAAU,SAACjD,GAAD,OAAO,EAAK2D,mBAAmB3D,MAE3C,kBAAC,EAAD,CACEd,KAAK,WACLa,GAAG,kBACHtB,QAAQ,gBACRqB,YAAY,wBACZqD,MAAOvD,KAAKR,MAAM4C,QAAQ+B,QAC1Bd,SAAU,SAACjD,GAAD,OAAO,EAAK2D,mBAAmB3D,MAE3C,yBAAKxB,UAAU,cACb,kBAAC,EAAD,CACED,KAAK,GACLW,KAAK,SACLT,QAAQ,kBACRM,QAAS,SAACiB,GAAD,OAAO,EAAKsF,sBAAsBtF,KAJ7C,mB,GA5LUC,aC+BTsG,G,iNAhCbnH,MAAQ,CACN2C,SAAU,I,wEAGV,OACE,kBAAC,WAAD,KACE,yBAAKvD,UAAU,aACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,mBACb,yBACEA,UAAU,sBACVoD,IAAI,6DACJC,IAAI,qBAGR,yBAAKrD,UAAU,eACb,wBAAIA,UAAU,wBAAd,eACA,2BAAOA,UAAU,mBAAjB,wBAGJ,yBAAKA,UAAU,wBACb,wBAAIA,UAAU,iCAAd,eACA,yBAAKA,UAAU,wCACb,kBAAC,EAAD,c,GAxBQyB,cC0BPuG,G,MA5BW,SAAClI,GAIzB,OAHAyC,qBAAU,WACRxB,QAAQC,IAAIlB,EAAMmI,MAAMC,OAAOC,cAG/B,yBAAKnI,UAAU,4BACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,cACb,yBAAKA,UAAU,0BACb,yBACEoD,IAAI,6DACJC,IAAI,yBACJrD,UAAU,kCAGd,yBAAKA,UAAU,mBACb,uBAAGA,UAAU,sBAAb,kBAGJ,yBAAKA,UAAU,eACb,wBAAIA,UAAU,iBAAd,iBACA,uBAAGA,UAAU,mBAAb,qBCzBGoI,EAAW,SAACzD,GAAD,MAA4B,KAAjBA,EAAM+B,QAE5B2B,EAAS,SAACC,GAAD,OAAY,SAAC3D,GACjC,IAAI4D,GAAU,EAOd,OANID,EAAOvD,MACTwD,EAAUA,GAAW5D,EAAM+B,OAAO2B,QAAUC,EAAOvD,KAEjDuD,EAAOrD,MACTsD,EAAUA,GAAW5D,EAAM+B,OAAO2B,QAAUC,EAAOrD,KAE9CsD,IAGIC,EAAQ,SAAC7D,GAAD,MACnB,wIAAwI8D,KACtI9D,IC2LW+D,G,kBA/Lb,WAAY5I,GAAQ,IAAD,8BACjB,4CAAMA,KA6CRqF,mBAAqB,SAAC3D,GACpB,IAAMmH,EAAa,EAAK/H,MAAM+H,WAC1BJ,GAAU,EACd,GAAII,EAAWnH,EAAE8D,OAAO/D,IAAIqH,WAAWP,OAAS,EAAhD,4BACE,YAAwBM,EAAWnH,EAAE8D,OAAO/D,IAAIqH,WAAhD,+CAA4D,CAAC,IAAlDC,EAAiD,QAC1DN,EAAUA,GAAWM,EAAUrH,EAAE8D,OAAOX,QAF5C,mFAIAgE,EAAWnH,EAAE8D,OAAO/D,IAApB,eACKoH,EAAWnH,EAAE8D,OAAO/D,IADzB,CAEEoD,MAAOnD,EAAE8D,OAAOX,MAChBH,MAAO+D,IAET,IAAIO,GAAc,EAClB,IAAK,IAAMC,KAAWJ,EACpBG,EAAcA,GAAeH,EAAWI,GAASvE,MACnD,EAAKgB,SAAS,CAAEmD,aAAYG,YAAaA,KA7DxB,EAgEnBE,iBAAmB,SAACxH,GAClB,IAAMmH,EAAa,EAAK/H,MAAM+H,WACxBM,EAAS,EAAKrI,MAAMqI,OAE1B,GADAN,EAAWO,eAAevE,MAAQnD,EAAE8D,OAAO6D,MAAM,GD5DxB,SAAC3H,GAC5B,QAAKA,EAAE8D,OAAO6D,MAAM,GAAGhI,KAAKiI,cAAcnB,MAAM,qBC4D1CoB,CAAc7H,IAAM4G,EAAS5G,EAAE8D,OAAOX,OACxCgE,EAAWO,eAAe1E,OAAQ,EAClC,EAAKgB,SAAS,CAAEmD,mBACX,CACLA,EAAWO,eAAevE,MAAQ,KAClCgE,EAAWO,eAAe1E,OAAQ,EAClC,EAAKgB,SAAS,CAAEmD,eAChB,IAAMW,EAAM,IAAI5B,MAAM,qBAEtBuB,EAAOtC,KAAK2C,GACZ,EAAK9D,SAAS,CAAEyD,aA9ED,EAkFnBM,iBAAmB,SAAC/H,GAClB,IAAMuH,EAAUvH,EAAE8D,OAAO/D,GACnBoH,EAAa,EAAK/H,MAAM+H,WAC9BA,EAAWI,GAASnE,SAAU,EAC9B,EAAKY,SAAS,CAAEmD,gBApFhB,EAAK/H,MAAQ,CACXqI,OAAQ,GACRN,WAAY,CACVa,UAAW,CACT7E,MAAO,GACPH,OAAO,EACPI,SAAS,EACTgE,WAAY,CAACR,EAAUC,EAAO,CAAEtD,IAAK,MAEvC0E,SAAU,CACR9E,MAAO,GACPH,OAAO,EACPI,SAAS,EACTgE,WAAY,CAACR,EAAUC,EAAO,CAAEtD,IAAK,MAEvC2E,SAAU,CACR/E,MAAO,GACPH,OAAO,EACPI,SAAS,EACTgE,WAAY,CAACR,EAAUC,EAAO,CAAEtD,IAAK,MAEvCyD,MAAO,CACL7D,MAAO,GACPH,OAAO,EACPI,SAAS,EACTgE,WAAY,CAACR,EAAUI,IAEzBmB,SAAU,CACRhF,MAAO,GACPH,OAAO,EACPI,SAAS,EACTgE,WAAY,CAACR,EAAUC,EAAO,CAAEtD,IAAK,MAEvCmE,eAAgB,CACdvE,MAAO,KACPH,OAAO,EACPI,SAAS,EACTgE,WAAY,KAGhBE,aAAa,GA1CE,E,sEAyFT,IAAD,OACP,OACE,yBAAK9I,UAAU,aACb,wBAAIA,UAAU,OAAO+B,MAAO,CAAE6H,UAAW,WAAzC,gBAGA,0BACE5J,UAAU,kBACV8H,SAAU,SAACtG,GAAD,OAAO,EAAK1B,MAAM+J,cAAcrI,EAAG,EAAKZ,MAAM+H,cAExD,kBAAC,EAAD,CACEjI,KAAK,OACL4D,MAAM,kBACNnD,KAAK,iBACLI,GAAG,iBACHtB,QAAQ,GACR4E,OAAQzD,KAAKmI,iBACb9E,SAAUrD,KAAK4H,iBACfxE,MAAOpD,KAAKR,MAAM+H,WAAX,eAAwCnE,MAC/CI,QAASxD,KAAKR,MAAM+H,WAAWO,eAAetE,UAEhD,kBAAC,EAAD,CACElE,KAAK,OACL4D,MAAM,aACN/C,GAAG,YACHtB,QAAQ,GACR0E,MAAOvD,KAAKR,MAAM+H,WAAWa,UAAU7E,MACvCH,MAAOpD,KAAKR,MAAM+H,WAAWa,UAAUhF,MACvCI,QAASxD,KAAKR,MAAM+H,WAAWa,UAAU5E,QACzCtD,YAAY,aACZuD,OAAQzD,KAAKmI,iBACb9E,SAAUrD,KAAK+D,qBAEjB,kBAAC,EAAD,CACEzE,KAAK,OACL4D,MAAM,YACN/C,GAAG,WACHtB,QAAQ,GACR0E,MAAOvD,KAAKR,MAAM+H,WAAWc,SAAS9E,MACtCH,MAAOpD,KAAKR,MAAM+H,WAAWc,SAASjF,MACtCI,QAASxD,KAAKR,MAAM+H,WAAWc,SAAS7E,QACxCtD,YAAY,YACZuD,OAAQzD,KAAKmI,iBACb9E,SAAUrD,KAAK+D,qBAEjB,kBAAC,EAAD,CACEzE,KAAK,OACLa,GAAG,WACHtB,QAAQ,GACRqE,MAAM,WACNK,MAAOvD,KAAKR,MAAM+H,WAAWe,SAAS/E,MACtCH,MAAOpD,KAAKR,MAAM+H,WAAWe,SAASlF,MACtCI,QAASxD,KAAKR,MAAM+H,WAAWe,SAAS9E,QACxCtD,YAAY,iBACZuD,OAAQzD,KAAKmI,iBACb9E,SAAUrD,KAAK+D,qBAGjB,kBAAC,EAAD,CACEzE,KAAK,QACL4D,MAAM,QACNrE,QAAQ,GACRsB,GAAG,QACHD,YAAY,cACZqD,MAAOvD,KAAKR,MAAM+H,WAAWH,MAAM7D,MACnCH,MAAOpD,KAAKR,MAAM+H,WAAWH,MAAMhE,MACnCI,QAASxD,KAAKR,MAAM+H,WAAWH,MAAM5D,QACrCC,OAAQzD,KAAKmI,iBACb9E,SAAUrD,KAAK+D,qBAGjB,kBAAC,EAAD,CACEzE,KAAK,WACLV,UAAU,eACVuB,GAAG,WACH+C,MAAM,WACNrE,QAAQ,GACR0E,MAAOvD,KAAKR,MAAM+H,WAAWgB,SAAShF,MACtCH,MAAOpD,KAAKR,MAAM+H,WAAWgB,SAASnF,MACtCI,QAASxD,KAAKR,MAAM+H,WAAWgB,SAAS/E,QACxCtD,YAAY,WACZuD,OAAQzD,KAAKmI,iBACb9E,SAAUrD,KAAK+D,qBAGjB,kBAAC,EAAD,CACEzE,KAAK,SACLT,QAAQ,kBACRO,SAAWY,KAAKR,MAAMkI,YAA2B,GAAb,YAHtC,WAOA,6BACA,kBAAC,EAAD,CAAQ/I,KAAK,SAASE,QAAQ,eAA9B,kC,GAvLewB,cC+DVqI,G,iNAlEblJ,MAAQ,CACNmJ,KAAM,CACJvB,MAAO,GACPmB,SAAU,K,EAIdxE,mBAAqB,SAAC3D,GACpB,IAAIuI,EAAO,EAAKnJ,MAAMmJ,KAClBC,EAAWxI,EAAE8D,OAAO/D,GACP,UAAbyI,EAAsBD,EAAKvB,MAAQhH,EAAE8D,OAAOX,MAC1B,aAAbqF,IAAyBD,EAAKJ,SAAWnI,EAAE8D,OAAOX,OAE3D,EAAKa,SAAS,CAAEuE,U,wEAaR,IAAD,OACP,OACE,yBAAK/J,UAAU,aACb,wBAAIA,UAAU,OAAO+B,MAAO,CAAE6H,UAAW,WAAzC,cAGA,0BACE5J,UAAU,kBACV8H,SAAU,SAACtG,GAAD,OAAO,EAAK1B,MAAMmK,aAAazI,EAAG,EAAKZ,MAAMmJ,QAEvD,kBAAC,EAAD,CACErJ,KAAK,QACL4D,MAAM,QACN/C,GAAG,QACHD,YAAY,cACZqD,MAAOvD,KAAKR,MAAMmJ,KAAKvB,MACvB/D,SAAU,SAACjD,GAAD,OAAO,EAAK2D,mBAAmB3D,MAE3C,kBAAC,EAAD,CACEd,KAAK,WACLV,UAAU,eACVuB,GAAG,WACH+C,MAAM,WACNK,MAAOvD,KAAKR,MAAMmJ,KAAKJ,SACvBrI,YAAY,WACZmD,SAAU,SAACjD,GAAD,OAAO,EAAK2D,mBAAmB3D,MAE3C,kBAAC,EAAD,CAAQd,KAAK,SAAST,QAAQ,mBAA9B,UAGA,6BACA,kBAAC,EAAD,CAAQF,KAAK,UAAUE,QAAQ,eAA/B,mB,GA1DcwB,cCUlByI,E,YACJ,WAAYpK,GAAQ,IAAD,8BACjB,4CAAMA,KA4BRoH,WAAa,SAACoC,GACZ,IAAMnC,EAAQ,EAAKvG,MAAMuG,MACzB,EAAK3B,SAAS,CAAE2B,WA/BC,EAgDnBhD,oBAAsB,WACpB,EAAKqB,SAAS,CAAE2E,WAAY,EAAKvJ,MAAMuJ,aAjDtB,EAoDnBC,aAAe,WACb,EAAK5E,SAAS,CAAE2B,MAAO,QArDN,EAwDnBF,gBAAkB,SAACoD,GACjB,EAAK7E,SAAS,CAAExB,aAAcqG,KAzDb,EA4DnBJ,aAAe,SAACzI,EAAG8I,GACjB9I,EAAEuF,iBACFhG,QAAQC,IAAI,qBACZ,EAAKlB,MAAMyK,QAAQ5D,KAAK,KACxB,EAAKM,gBAAgB,qBACrB,EAAK9C,uBAjEY,EAoEnB0F,cAAgB,SAACrI,EAAG8I,GAClB9I,EAAEuF,iBACF,IAAMyD,EAAW,IAAIC,SACrBD,EAASE,OAAO,iBAAkBJ,EAASpB,eAAevE,OAC1D6F,EAASE,OAAO,YAAaJ,EAASd,UAAU7E,OAChD6F,EAASE,OAAO,WAAYJ,EAASb,SAAS9E,OAC9C6F,EAASE,OAAO,WAAYJ,EAASZ,SAAS/E,OAC9C6F,EAASE,OAAO,QAASJ,EAAS9B,MAAM7D,OACxC6F,EAASE,OAAO,WAAYJ,EAASX,SAAShF,OAC9C5D,QAAQC,IAAIsJ,GACZK,IACGC,KAAK,mCAAoCJ,GACzCjD,MAAK,SAACC,GAELzG,QAAQC,IAAIwG,EAAIqD,SAEjBhD,MAAM,EAAKX,aApFG,EA2FnBE,gBAAkB,WAChB,EAAKtH,MAAMyK,QAAQO,QAAQ,WA1F3B,EAAKlK,MAAQ,CACXS,QAAS,WACTgB,OAAQ,GACR8E,MAAO,KACPgD,WAAW,EACXnG,aAAc,GACd+G,OAAQ,IACRC,MAAO,cACP9J,QAAQ,GAVO,E,iFAcE,IAAD,OAClBH,QAAQC,IAAI,mBACZqG,MAAM,mCAAoC,CACxCC,OAAQ,QAEPC,MAAK,SAACC,GACL,GAAmB,MAAfA,EAAIC,OAAgB,MAAM,IAAIC,MAAM,0BACxC,OAAOF,EAAIG,UAEZJ,MAAK,SAACK,GACL,EAAKpC,SAAS,CAAEnD,OAAQuF,EAAQvF,YAEjCwF,MAAMzG,KAAK8F,c,+BAqEN,IAAD,OACP,OACE,kBAAC,WAAD,KACE,kBAAC,EAAD,CAAK7F,QAASD,KAAKR,MAAMS,QAASH,OAAQE,KAAKR,MAAMM,UACnDE,KAAKR,MAAMuJ,WACX,kBAAC,EAAD,CACEnG,aAAc5C,KAAKR,MAAMoD,aACzBG,oBAAqB/C,KAAK+C,sBAQ9B,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE8G,OAAK,EACLC,KAAK,SACLC,OAAQ,SAACrL,GAAD,OACN,kBAAC,EAAD,iBACMA,EADN,CAEEoB,OAAQ,EAAKN,MAAMM,OACnBkG,gBAAiB,EAAKA,gBACtB/E,OAAQ,EAAKzB,MAAMyB,OACnB4E,gBAAiB,EAAKA,gBACtB9C,oBAAqB,EAAKA,0BAIhC,kBAAC,IAAD,CACE8G,OAAK,EACLC,KAAK,SACLC,OAAQ,SAACrL,GAAD,OACN,kBAAC,EAAD,iBAAeA,EAAf,CAAsBmK,aAAc,EAAKA,mBAG7C,kBAAC,IAAD,CACEgB,OAAK,EACLC,KAAK,UACLC,OAAQ,SAACrL,GAAD,OACN,kBAAC,EAAD,iBAAgBA,EAAhB,CAAuB+J,cAAe,EAAKA,oBAG/C,kBAAC,IAAD,CAAOoB,OAAK,EAACC,KAAK,WAAWE,UAAWC,IACxC,kBAAC,IAAD,CACEJ,OAAK,EACLC,KAAK,IACLC,OAAQ,kBAAM,kBAAC,EAAD,CAAQ9I,OAAQ,EAAKzB,MAAMyB,YAM3C,kBAAC,IAAD,CACE4I,OAAK,EACLC,KAAK,gBACLC,OAAQ,SAACrL,GAAD,OAAW,kBAAC,EAAsBA,MAE5C,kBAAC,IAAD,CAAOoL,KAAK,WACV,kBAAC,IAAD,CACEA,KAAK,gBACLC,OAAQ,SAACrL,GAAD,OAAW,6BAAMA,EAAMmI,MAAMC,OAAOoD,iBAGhD,kBAAC,IAAD,CACEL,OAAK,EACLC,KAAK,YACLC,OAAQ,SAACrL,GAAD,OAAW,kBAAC,EAAaA,Y,GApK3B2B,aA4KH8J,cAAWrB,GChLNsB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS1D,MACvB,2D,YCTN2D,IAAST,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFtF,SAASgG,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzE,MAAK,SAAA0E,GACjCA,EAAaC,kB","file":"static/js/main.01600595.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./Button.css\";\n\nconst button = (props) =>\n  !props.link ? (\n    <button\n      className={[\n        `button--${props.design}`,\n        `button--${props.mode}`,\n        `${props.classes}`,\n      ].join(\" \")}\n      onClick={props.onClick}\n      disabled={props.disabled || props.loading}\n      type={props.type}\n    >\n      {props.loading ? \"Loading...\" : props.children}\n    </button>\n  ) : (\n    <Link className={[`${props.classes}`].join(\" \")} to={props.link}>\n      {props.children}\n    </Link>\n  );\n\nexport default button;\n","import React, { Component, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"../Button/Button\";\r\n\r\nimport \"./nav.css\";\r\n\r\nclass Nav extends Component {\r\n  state = {\r\n    serachQuery: \"sadf\",\r\n  };\r\n\r\n  searchHandler = () => {\r\n    console.log(\"hello\");\r\n  };\r\n\r\n  profileHandler = () => {\r\n    const isAuth = this.props.isAuth;\r\n    if (isAuth) {\r\n      return { link: \"/profile\", name: \"Profile\" };\r\n    } else {\r\n      return { link: \"/login\", name: \"Login\" };\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-dark bg-dark\">\r\n        {/* <Link className=\"navbar-brand col-9\" to=\"/\">\r\n          {this.props.appName}\r\n        </Link> */}\r\n        <Button link=\"/\" classes=\"navbar-brand col-4\">\r\n          {this.props.appName}\r\n        </Button>\r\n        <div className=\"search-container col-5\">\r\n          <form className=\"nav-search-form\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"search-input\"\r\n              placeholder=\"search stories\"\r\n              id=\"search\"\r\n            />\r\n            <Button\r\n              link={`/search/${this.state.serachQuery}`}\r\n              classes=\"nav-search-btn\"\r\n              onClick={(e) => this.searchHandler(e)}\r\n            >\r\n              <i className=\"fa fa-search\"></i>\r\n            </Button>\r\n          </form>\r\n        </div>\r\n        <Button\r\n          link={this.profileHandler().link}\r\n          classes=\"btn btn-secondary btn_profile col-1\"\r\n        >\r\n          {this.profileHandler().name}\r\n        </Button>\r\n        <Button link=\"/write\" classes=\"btn btn-warning btn_write col-1\">\r\n          Write\r\n        </Button>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Nav;\r\n","import React, { Component, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./genre.css\";\r\n\r\nconst Genre = (props) => {\r\n  const [name, setName] = useState(props.genreName);\r\n  // const [active, setActive] = useState(false);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(name);\r\n  // }, []);\r\n\r\n  // const toggleClass = () => {\r\n  //   let a = active;\r\n  //   setActive(!a);\r\n  //   props.activeGenreHandler(name, active);\r\n  // };\r\n\r\n  let classes = \"genre_div \";\r\n  // if (active) classes += \"genre_div_active\";\r\n  return (\r\n    <Link className=\"text_transfrom_none\" to={props._id}>\r\n      <div className={classes}>\r\n        <p className=\"genre_text\">{name}</p>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Genre;\r\n\r\n// class Category extends Component {\r\n//   state = {\r\n//     name: this.props.categoryName,\r\n//     active: false\r\n//   };\r\n\r\n//   toggleClass = () => {\r\n//     let a = this.state.active;\r\n//     this.setState({ active: !a });\r\n//     this.props.activeCategoryHandler(this.state.name, this.state.active);\r\n//   };\r\n//   render() {}\r\n// }\r\n\r\n// export default Category;\r\n","import React, { Component, Fragment, useEffect, useState } from \"react\";\r\n// import OwlCarousel from \"react-owl-carousel\";\r\n// import \"owl.carousel/dist/assets/owl.carousel.css\";\r\n// import \"owl.carousel/dist/assets/owl.theme.default.css\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nimport Genre from \"../genre/genre\";\r\nimport \"./genres.css\";\r\n\r\nfunction SampleNextArrow(props) {\r\n  const { className, style, onClick } = props;\r\n  return (\r\n    <div\r\n      className={className}\r\n      style={{ ...style, display: \"block\", background: \"red\", color: \"black\" }}\r\n      onClick={onClick}\r\n    />\r\n  );\r\n}\r\n\r\nfunction SamplePrevArrow(props) {\r\n  const { className, style, onClick } = props;\r\n  return (\r\n    <div\r\n      className={className}\r\n      style={{ ...style, display: \"block\", background: \"black\" }}\r\n      onClick={onClick}\r\n    />\r\n  );\r\n}\r\n\r\nconst Genres = (props) => {\r\n  const [genres, setGenres] = useState(props.genres);\r\n  const [error, setError] = useState(null);\r\n\r\n  const catchError = (error) => setError(error);\r\n\r\n  useEffect(() => {\r\n    setGenres(props.genres);\r\n  });\r\n\r\n  // useEffect(() => {\r\n  // setCategories(props.categories);\r\n  // fetch(\"http://localhost:8080/categories\", {\r\n  //   method: \"GET\"\r\n  // })\r\n  //   .then(res => {\r\n  //     if (res.status !== 200) throw new Error(\"failed to fetch categories\");\r\n  //     return res.json();\r\n  //   })\r\n  //   .then(resData => {\r\n  //     setCategories(resData.categories);\r\n  //   })\r\n  //   .catch(catchError);\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    console.log(genres);\r\n  });\r\n\r\n  let settings = {\r\n    slidesToShow: 4,\r\n    swipeToSlide: false,\r\n    dragToSlide: false,\r\n    nextArrow: <SampleNextArrow />,\r\n    prevArrow: <SamplePrevArrow />,\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"genres_div\">\r\n        <Slider {...settings}>\r\n          {genres.map((genre) => (\r\n            <Genre key={genre.name} _id={genre._id} genreName={genre.name} />\r\n            // <Genre\r\n            //   activeGenreHandler={props.activeGenreHandler}\r\n            //   key={genre.name}\r\n            //   genreName={genre.name}\r\n            // />\r\n          ))}\r\n        </Slider>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Genres;\r\n","import React, { Component, Fragment } from \"react\";\r\n\r\nimport Button from \"../commonComponents/Button/Button\";\r\n\r\nimport \"./writing.css\";\r\n\r\nclass Writing extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"writing_div\">\r\n        <h4 className=\"writing_title\">{this.props.title}</h4>\r\n        <p className=\"writig_text\">{this.props.text}</p>\r\n        <Button\r\n          classes=\"btn btn-secondary read-more-btn\"\r\n          link={`/w/${this.props._id}`}\r\n        >\r\n          Read more\r\n        </Button>\r\n        <div className=\"author-info\">\r\n          <div className=\"writing-profile-picture\">\r\n            <img\r\n              src=\"https://i.ibb.co/r6K6JJn/altophoto-17-10-12-19-02-2018.png\"\r\n              alt=\"author-image\"\r\n            />\r\n          </div>\r\n          <p>username</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Writing;\r\n","import React, { Component, Fragment } from \"react\";\r\n\r\nimport Writing from \"../writingCard/writing\";\r\nimport \"./writings.css\";\r\n\r\nclass Writings extends Component {\r\n  state = {\r\n    writings: [\r\n      {\r\n        _id: \"1\",\r\n        title: \"title1\",\r\n        text:\r\n          \"ldsf;kgjlsa;jfsdl;fjsdl;fjdslafhsdalhfglksjglsda;jfds;ljflsd;jfsda;fjsda;lfkjsd\",\r\n      },\r\n      {\r\n        _id: \"2\",\r\n        title: \"title1\",\r\n        text: \"ldsf;kgjlsa;jfsdl;fjsdl\",\r\n      },\r\n      {\r\n        _id: \"13\",\r\n        title: \"title1\",\r\n        text:\r\n          \"ldsf;kgjlsa;jfsdl;fjsdl;fjdslafhsdalhfgll;fjsdl;fjdslafhsdalhfglksjglsdal;fjsdl;fjdslafhsdalhfglksjglsdal;fjsdl;fjdslafhsdalhfglksjglsdal;fjsdl;fjdslafhsdalhfglksjglsdal;fjsdl;fjdslafhsdalhfglksjglsdal;fjsdl;fjdslafhsdalhfglksjglsdal;fjsdl;fjdslafhsdalhfglksjglsdaksjglsda;jfds;ljflsd;jfsda;fjsda;lfkjsd\",\r\n      },\r\n      {\r\n        _id: \"45\",\r\n        title: \"title1\",\r\n        text: \"ldsf;kgjlsa;jfsdl;fjsdl\",\r\n      },\r\n      {\r\n        _id: \"25\",\r\n        title: \"title1\",\r\n        text: \"ldsf;kgjlsa;jfsdl;fjsdl\",\r\n      },\r\n      {\r\n        _id: \"245\",\r\n        title: \"title1\",\r\n        text: \"ldsf;kgjlsa;jfsdl;fjsdl\",\r\n      },\r\n      {\r\n        _id: \"2456\",\r\n        title: \"title1\",\r\n        text: \"ldsf;kgjlsa;jfsdl;fjsdl\",\r\n      },\r\n      {\r\n        _id: \"462\",\r\n        title: \"title1\",\r\n        text: \"ldsf;kgjlsa;jfsdl;fjsdl\",\r\n      },\r\n    ],\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"writings_div\">\r\n        {this.state.writings.map((writing) => (\r\n          <Writing\r\n            key={writing._id}\r\n            _id={writing._id}\r\n            title={writing.title}\r\n            text={writing.text}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Writings;\r\n","import React, { Fragment, useEffect } from \"react\";\r\n\r\nconst alert = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className=\"alert alert-warning alert-dismissible fade show\"\r\n        role=\"alert\"\r\n        style={{\r\n          width: \"50%\",\r\n          left: \"25%\",\r\n          top: \"20%\",\r\n          position: \"absolute\",\r\n          zIndex: \"999\",\r\n        }}\r\n      >\r\n        <strong>{props.alertMessage}</strong>\r\n        <button\r\n          type=\"button\"\r\n          className=\"close\"\r\n          data-dismiss=\"alert\"\r\n          aria-label=\"Close\"\r\n          onClick={props.alertMessageHandler}\r\n        >\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default alert;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./input.css\";\r\n\r\nconst Input = (props) => {\r\n  if (props.type === \"select\") {\r\n    return (\r\n      <div className=\"form-group\">\r\n        {props.label || <label htmlFor={props.id}>{props.label}</label>}\r\n        <select\r\n          className={\r\n            props.valid\r\n              ? [`${props.classes}`, `form-control`].join(\" \")\r\n              : [`${props.classes}`, \"form-control\", \"input-error\"].join(\" \")\r\n          }\r\n          onChange={props.onChange}\r\n          name={props.name}\r\n          onClick={props.onClick}\r\n        >\r\n          {props.options.map((genre) => (\r\n            <option key={genre._id} id={props.id}>\r\n              {genre.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    );\r\n  } else if (props.type === \"textarea\") {\r\n    return (\r\n      <div className=\"form-group\">\r\n        {props.label || <label htmlFor={props.id}>{props.label}</label>}\r\n        <textarea\r\n          className={\r\n            props.valid\r\n              ? [`${props.classes}`, `form-control`].join(\" \")\r\n              : [`${props.classes}`, \"form-control\", \"input-error\"].join(\" \")\r\n          }\r\n          placeholder={props.placeholder}\r\n          onChange={props.onChange}\r\n          name={props.name}\r\n          id={props.id}\r\n          value={props.value}\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"form-group\">\r\n        {props.label || <label htmlFor={props.id}>{props.label}</label>}\r\n        <input\r\n          type={props.type}\r\n          className={[\r\n            `${props.classes}`,\r\n            `form-control`,\r\n            props.valid ? \"valid\" : \"invalid\",\r\n            props.touched ? \"touched\" : \"untouched\",\r\n          ].join(\" \")}\r\n          onChange={props.onChange}\r\n          onClick={props.onClick}\r\n          onBlur={props.onBlur}\r\n          placeholder={props.placeholder}\r\n          value={props.value}\r\n          name={props.name}\r\n          minLength={props.min}\r\n          maxLength={props.max}\r\n          id={props.id}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\n//   !(props.type === \"select\") ? (\r\n\r\n//   ) :  : (<div>someting else</div>);\r\n\r\nexport default Input;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./write.css\";\r\n\r\nimport Alert from \"../../components/commonComponents/alert/alert\";\r\nimport Input from \"../../components/commonComponents/input/input\";\r\nimport Button from \"../../components/commonComponents/Button/Button\";\r\n\r\nclass WritePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    if (!this.props.isAuth) this.props.redirectToLogin();\r\n    this.state = {\r\n      genres: [],\r\n      error: null,\r\n      tags: \"\",\r\n      writing: {\r\n        title: \"\",\r\n        genre: \"\",\r\n        content: \"\",\r\n        tags: [],\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"http://localhost:8080/api/genres\", {\r\n      method: \"GET\",\r\n    })\r\n      .then((res) => {\r\n        if (res.status !== 200) throw new Error(\"failed to fetch Genres\");\r\n        return res.json();\r\n      })\r\n      .then((resData) => {\r\n        this.setState({ genres: resData.genres });\r\n      })\r\n      .catch(this.catchError);\r\n  }\r\n\r\n  inputChangeHandler = (event) => {\r\n    let writing = this.state.writing;\r\n    let tags = this.state.tags;\r\n    if (event.target.id === \"title\") {\r\n      writing.title = event.target.value;\r\n    } else if (event.target.id === \"writing-content\") {\r\n      writing.content = event.target.value;\r\n    } else if (event.target.id === \"genre\") {\r\n      writing.genre = event.target.value;\r\n    } else if (event.target.id === \"tags\") {\r\n      tags = event.target.value;\r\n    }\r\n    this.setState({ writing, tags });\r\n  };\r\n\r\n  handleTagsInput = (event) => {\r\n    let writing = this.state.writing;\r\n    let tag = this.state.tag;\r\n    tag = event.target.value;\r\n    if (\r\n      event.target.value.slice(-1) === \" \" ||\r\n      event.target.value.slice(-1) === \"\\n\"\r\n    ) {\r\n      console.log(\"tag created\");\r\n      const div = document.createElement(\"div\");\r\n      const p = document.createElement(\"p\");\r\n      const span = document.createElement(\"span\");\r\n      span.addEventListener(\"click\", function () {\r\n        const index = writing.tags.indexOf(\r\n          span.parentNode.firstChild.innerHTML\r\n        );\r\n        console.log(index);\r\n        const tags = writing.tags.splice(index, 1);\r\n        writing.tags = tags;\r\n        console.log(writing.tags);\r\n        span.parentElement.remove();\r\n        this.setState({ writing });\r\n      });\r\n      p.innerHTML = tag.trim();\r\n      writing.tags.push(p.innerHTML);\r\n      span.innerHTML = \"X\";\r\n      div.classList = \"tag\";\r\n      div.appendChild(p);\r\n      div.appendChild(span);\r\n      event.target.parentNode.appendChild(div);\r\n      tag = \"\";\r\n    }\r\n    this.setState({ writing, tag });\r\n  };\r\n\r\n  // handleOptionClick = (event) => {\r\n  //   let writing = this.state.writing;\r\n  //   if (event.target.value !== \"\" || event.target.value !== undefined) {\r\n  //     if (\r\n  //       writing.genres.find((genre) => genre === event.target.value) ==\r\n  //       undefined\r\n  //     ) {\r\n  //       writing.genres.push(event.target.value);\r\n  //     } else {\r\n  //       writing.genres = writing.genres.filter((genre) => {\r\n  //         if (genre !== event.target.value) return genre;\r\n  //       });\r\n  //     }\r\n  //     this.setState({ writing });\r\n  //   }\r\n  // };\r\n\r\n  publishWritingHandler = (event) => {\r\n    event.preventDefault();\r\n    let tags = this.state.tags;\r\n    let writing = this.state.writing;\r\n    writing.tags = tags.trim().split(\" \");\r\n    console.log(this.state.writing);\r\n    this.setState({\r\n      writing: { title: \"\", genre: \"\", content: \"\", tags: [] },\r\n      tags: \"\",\r\n    });\r\n    this.props.setAlertMessage(\"published successfully\");\r\n    this.props.alertMessageHandler();\r\n\r\n    // fetch(\"http://localhost:8080/write\", {\r\n    //   method: \"POST\",\r\n    //   headers: { \"content-type\": \"application/json\" },\r\n    //   body: JSON.stringify({\r\n    //     title: this.state.writing.title,\r\n    //     category: this.state.writing.category,\r\n    //     genres: this.state.writing.genres,\r\n    //     content: this.state.writing.content\r\n    //   })\r\n    // })\r\n    //   .then(res => {\r\n    //     if (res.status !== 200 && res.status !== 201) {\r\n    //       throw new Error(\"Can't publish\");\r\n    //     }\r\n    //     return res.json();\r\n    //   })\r\n    //   .then(resData => {\r\n    //     this.props.setAlertMessage(\"writing published successful!!\");\r\n    //     this.props.alertMessageHandler();\r\n    //     console.log(resData);\r\n    //     this.setState({\r\n    //       writing: { title: \"\", category: \"\", content: \"\", genres: [] },\r\n    //       genres: \"\"\r\n    //     });\r\n    //   })\r\n    //   .catch(this.catchError);\r\n  };\r\n\r\n  catchError = (error) => {\r\n    console.log(error);\r\n    this.setState({ error: error });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"container writeForm_div\">\r\n          <form onSubmit={(e) => this.publishWritingHandler(e)}>\r\n            <Input\r\n              type=\"text\"\r\n              label=\"Title\"\r\n              id=\"title\"\r\n              classes=\"write-title\"\r\n              placeholder=\"Write title here\"\r\n              min=\"1\"\r\n              value={this.state.writing.title}\r\n              onChange={(e) => this.inputChangeHandler(e)}\r\n            />\r\n            <Input\r\n              type=\"select\"\r\n              options={this.state.genres}\r\n              label=\"Genre\"\r\n              id=\"genre\"\r\n              classes=\"write-genre\"\r\n              placeholder=\"Select Genre\"\r\n              min=\"1\"\r\n              value={this.state.writing.genre}\r\n              onClick={(e) => this.inputChangeHandler(e)}\r\n            />\r\n            <Input\r\n              type=\"text\"\r\n              label=\"Tags\"\r\n              id=\"tags\"\r\n              classes=\"write-tags\"\r\n              value={this.state.tags}\r\n              placeholder=\"Write tags here separated by spaces\"\r\n              onChange={(e) => this.inputChangeHandler(e)}\r\n            />\r\n            <Input\r\n              type=\"textarea\"\r\n              id=\"writing-content\"\r\n              classes=\"write-content\"\r\n              placeholder=\"Write your story here\"\r\n              value={this.state.writing.content}\r\n              onChange={(e) => this.inputChangeHandler(e)}\r\n            />\r\n            <div className=\"form-group\">\r\n              <Button\r\n                link=\"\"\r\n                type=\"submit\"\r\n                classes=\"btn btn-primary\"\r\n                onClick={(e) => this.publishWritingHandler(e)}\r\n              >\r\n                Publish\r\n              </Button>\r\n            </div>\r\n            {/* <div class=\"form-group\">\r\n              <label for=\"title\">Title</label>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                id=\"title\"\r\n                value={this.state.writing.title}\r\n                onChange={(e) => this.inputChangeHandler(e)}\r\n                placeholder=\"Some Title\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"genres\">Select max 5 genres</label>\r\n              <select\r\n                multiple={true}\r\n                class=\"form-control\"\r\n                value={this.state.writing.genres}\r\n                onChange={(e) => this.inputChangeHandler(e)}\r\n                id=\"genres\"\r\n              >\r\n                {this.state.categories.map((category) => (\r\n                  <option\r\n                    key={category.name}\r\n                    onClick={(e) => this.handleOptionClick(e)}\r\n                  >\r\n                    {category.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div class=\"form-group\">\r\n              <label for=\"writtenContent\">Type your content here</label>\r\n              <textarea\r\n                class=\"form-control\"\r\n                id=\"writtenContent\"\r\n                value={this.state.writing.content}\r\n                onChange={(e) => this.inputChangeHandler(e)}\r\n                rows=\"4\"\r\n              ></textarea>\r\n            </div>\r\n            <div className=\"form-group\"> \r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                Publish\r\n              </button>\r\n            </div>*/}\r\n          </form>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WritePage;\r\n","import React, { Component, Fragment } from \"react\";\r\n\r\nimport \"./profile.css\";\r\n\r\nimport Writings from \"../../components/writings/writings\";\r\n\r\nclass Profile extends Component {\r\n  state = {\r\n    writings: [],\r\n  };\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <div className=\"container\">\r\n          <div className=\"profile_header_div\">\r\n            <div className=\"profile_picture\">\r\n              <img\r\n                className=\"profile_picture_img\"\r\n                src=\"https://i.ibb.co/r6K6JJn/altophoto-17-10-12-19-02-2018.png\"\r\n                alt=\"profile picture\"\r\n              />\r\n            </div>\r\n            <div className=\"profile_bio\">\r\n              <h4 className=\"profile_bio_username\">karan singh</h4>\r\n              <small className=\"profile_bio_bio\">just another human</small>\r\n            </div>\r\n          </div>\r\n          <div className=\"profile_writings_div\">\r\n            <h4 className=\"profile_writings_title col-12\">My writings</h4>\r\n            <div className=\"profile_writings_writings_div col-12\">\r\n              <Writings />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component, useState, useEffect } from \"react\";\r\n\r\nimport \"./singleWritingPage.css\";\r\n\r\nconst SingleWritingPage = (props) => {\r\n  useEffect(() => {\r\n    console.log(props.match.params.writingId);\r\n  });\r\n  return (\r\n    <div className=\"container container-main\">\r\n      <div className=\"container-div\">\r\n        <div className=\"author-box\">\r\n          <div className=\"author-profile-picture\">\r\n            <img\r\n              src=\"https://i.ibb.co/r6K6JJn/altophoto-17-10-12-19-02-2018.png\"\r\n              alt=\"author profile picture\"\r\n              className=\"author-profle-picture__image\"\r\n            />\r\n          </div>\r\n          <div className=\"author-username\">\r\n            <p className=\"author-username__p\">usernameHere</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"writing-box\">\r\n          <h4 className=\"writing-title\">writing title</h4>\r\n          <p className=\"writing-content\">writing body</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleWritingPage;\r\n","export const required = (value) => value.trim() !== \"\";\r\n\r\nexport const length = (config) => (value) => {\r\n  let isValid = true;\r\n  if (config.min) {\r\n    isValid = isValid && value.trim().length >= config.min;\r\n  }\r\n  if (config.max) {\r\n    isValid = isValid && value.trim().length <= config.max;\r\n  }\r\n  return isValid;\r\n};\r\n\r\nexport const email = (value) =>\r\n  /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/.test(\r\n    value\r\n  );\r\n\r\nexport const checkMimeType = (e) => {\r\n  if (!e.target.files[0].name.toLowerCase().match(/\\.(jpg|jpeg|png)$/)) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { required, length, email, checkMimeType } from \"../../utils/validators\";\r\n\r\nimport \"./signup.css\";\r\n\r\nimport Input from \"../../components/commonComponents/input/input\";\r\nimport Button from \"../../components/commonComponents/Button/Button\";\r\n\r\nclass SignupPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errors: [],\r\n      signupForm: {\r\n        firstName: {\r\n          value: \"\",\r\n          valid: false,\r\n          touched: false,\r\n          validators: [required, length({ min: 2 })],\r\n        },\r\n        lastName: {\r\n          value: \"\",\r\n          valid: false,\r\n          touched: false,\r\n          validators: [required, length({ min: 2 })],\r\n        },\r\n        username: {\r\n          value: \"\",\r\n          valid: false,\r\n          touched: false,\r\n          validators: [required, length({ min: 3 })],\r\n        },\r\n        email: {\r\n          value: \"\",\r\n          valid: false,\r\n          touched: false,\r\n          validators: [required, email],\r\n        },\r\n        password: {\r\n          value: \"\",\r\n          valid: false,\r\n          touched: false,\r\n          validators: [required, length({ min: 6 })],\r\n        },\r\n        profilePicture: {\r\n          value: null,\r\n          valid: false,\r\n          touched: false,\r\n          validators: [],\r\n        },\r\n      },\r\n      formIsValid: false,\r\n    };\r\n  }\r\n\r\n  inputChangeHandler = (e) => {\r\n    const signupForm = this.state.signupForm;\r\n    let isValid = true;\r\n    if (signupForm[e.target.id].validators.length > 0)\r\n      for (const validator of signupForm[e.target.id].validators) {\r\n        isValid = isValid && validator(e.target.value);\r\n      }\r\n    signupForm[e.target.id] = {\r\n      ...signupForm[e.target.id],\r\n      value: e.target.value,\r\n      valid: isValid,\r\n    };\r\n    let formIsValid = true;\r\n    for (const inputId in signupForm)\r\n      formIsValid = formIsValid && signupForm[inputId].valid;\r\n    this.setState({ signupForm, formIsValid: formIsValid });\r\n  };\r\n\r\n  inputFileHandler = (e) => {\r\n    const signupForm = this.state.signupForm;\r\n    const errors = this.state.errors;\r\n    signupForm.profilePicture.value = e.target.files[0];\r\n    if (checkMimeType(e) && required(e.target.value)) {\r\n      signupForm.profilePicture.valid = true;\r\n      this.setState({ signupForm });\r\n    } else {\r\n      signupForm.profilePicture.value = null;\r\n      signupForm.profilePicture.valid = false;\r\n      this.setState({ signupForm });\r\n      const err = new Error(\"invalid file type\");\r\n      // console.log(err.toString().split(\":\")[1]);\r\n      errors.push(err);\r\n      this.setState({ errors });\r\n    }\r\n  };\r\n\r\n  inputBlurHandler = (e) => {\r\n    const inputId = e.target.id;\r\n    const signupForm = this.state.signupForm;\r\n    signupForm[inputId].touched = true;\r\n    this.setState({ signupForm });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h3 className=\"mt-5\" style={{ textAlign: \"center\" }}>\r\n          Sign up form\r\n        </h3>\r\n        <form\r\n          className=\"input_form mt-5\"\r\n          onSubmit={(e) => this.props.signupHandler(e, this.state.signupForm)}\r\n        >\r\n          <Input\r\n            type=\"file\"\r\n            label=\"Profile Picture\"\r\n            name=\"profilePicture\"\r\n            id=\"profilePicture\"\r\n            classes=\"\"\r\n            onBlur={this.inputBlurHandler}\r\n            onChange={this.inputFileHandler}\r\n            valid={this.state.signupForm[\"profilePicture\"].valid}\r\n            touched={this.state.signupForm.profilePicture.touched}\r\n          />\r\n          <Input\r\n            type=\"text\"\r\n            label=\"First Name\"\r\n            id=\"firstName\"\r\n            classes=\"\"\r\n            value={this.state.signupForm.firstName.value}\r\n            valid={this.state.signupForm.firstName.valid}\r\n            touched={this.state.signupForm.firstName.touched}\r\n            placeholder=\"first name\"\r\n            onBlur={this.inputBlurHandler}\r\n            onChange={this.inputChangeHandler}\r\n          />\r\n          <Input\r\n            type=\"text\"\r\n            label=\"Last Name\"\r\n            id=\"lastName\"\r\n            classes=\"\"\r\n            value={this.state.signupForm.lastName.value}\r\n            valid={this.state.signupForm.lastName.valid}\r\n            touched={this.state.signupForm.lastName.touched}\r\n            placeholder=\"last name\"\r\n            onBlur={this.inputBlurHandler}\r\n            onChange={this.inputChangeHandler}\r\n          />\r\n          <Input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            classes=\"\"\r\n            label=\"Username\"\r\n            value={this.state.signupForm.username.value}\r\n            valid={this.state.signupForm.username.valid}\r\n            touched={this.state.signupForm.username.touched}\r\n            placeholder=\"Enter username\"\r\n            onBlur={this.inputBlurHandler}\r\n            onChange={this.inputChangeHandler}\r\n          />\r\n\r\n          <Input\r\n            type=\"email\"\r\n            label=\"Email\"\r\n            classes=\"\"\r\n            id=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={this.state.signupForm.email.value}\r\n            valid={this.state.signupForm.email.valid}\r\n            touched={this.state.signupForm.email.touched}\r\n            onBlur={this.inputBlurHandler}\r\n            onChange={this.inputChangeHandler}\r\n          />\r\n\r\n          <Input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            classes=\"\"\r\n            value={this.state.signupForm.password.value}\r\n            valid={this.state.signupForm.password.valid}\r\n            touched={this.state.signupForm.password.touched}\r\n            placeholder=\"Password\"\r\n            onBlur={this.inputBlurHandler}\r\n            onChange={this.inputChangeHandler}\r\n          />\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            classes=\"btn btn-primary\"\r\n            disabled={!this.state.formIsValid ? \"disabled\" : \"\"}\r\n          >\r\n            Sign up\r\n          </Button>\r\n          <br />\r\n          <Button link=\"/login\" classes=\"signin-link\">\r\n            Already have an account?\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignupPage;\r\n","import React, { Component } from \"react\";\r\nimport \"./login.css\";\r\n\r\nimport Input from \"../../components/commonComponents/input/input\";\r\nimport Button from \"../../components/commonComponents/Button/Button\";\r\n\r\nclass LoginPage extends Component {\r\n  state = {\r\n    user: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n  };\r\n\r\n  inputChangeHandler = (e) => {\r\n    let user = this.state.user;\r\n    let targetId = e.target.id;\r\n    if (targetId === \"email\") user.email = e.target.value;\r\n    else if (targetId === \"password\") user.password = e.target.value;\r\n\r\n    this.setState({ user });\r\n  };\r\n\r\n  // handleLogin = (e) => {\r\n\r\n  //   this.setState({\r\n  //     user: {\r\n  //       email: \"\",\r\n  //       password: \"\",\r\n  //     },\r\n  //   });\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h3 className=\"mt-5\" style={{ textAlign: \"center\" }}>\r\n          Login form\r\n        </h3>\r\n        <form\r\n          className=\"input_form mt-5\"\r\n          onSubmit={(e) => this.props.loginHandler(e, this.state.user)}\r\n        >\r\n          <Input\r\n            type=\"email\"\r\n            label=\"Email\"\r\n            id=\"email\"\r\n            placeholder=\"Enter email\"\r\n            value={this.state.user.email}\r\n            onChange={(e) => this.inputChangeHandler(e)}\r\n          />\r\n          <Input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"password\"\r\n            label=\"Password\"\r\n            value={this.state.user.password}\r\n            placeholder=\"Password\"\r\n            onChange={(e) => this.inputChangeHandler(e)}\r\n          />\r\n          <Button type=\"submit\" classes=\"btn btn-primary\">\r\n            Log in\r\n          </Button>\r\n          <br />\r\n          <Button link=\"/signup\" classes=\"signin-link\">\r\n            New User?\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n","import React, { Component, Fragment } from \"react\";\nimport { Switch, Route, Link, Redirect, withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nimport Nav from \"./components/commonComponents/nav/nav\";\nimport Genres from \"./components/genres/genres\";\nimport Writings from \"./components/writings/writings\";\nimport Alert from \"./components/commonComponents/alert/alert\";\n\nimport WritePage from \"./pages/write/write\";\nimport ProfilePage from \"./pages/profile/profile\";\nimport SingleWritingPage from \"./pages/singleWritingPage/singleWritingPage\";\nimport SignupPage from \"./pages/signup/signUp\";\nimport LoginPage from \"./pages/login/login\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      appName: \"4Writers\",\n      genres: [],\n      error: null,\n      isAlerted: true,\n      alertMessage: \"\",\n      userId: \"1\",\n      token: \"asdfsadfsdf\",\n      isAuth: false,\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"mounting occurs\");\n    fetch(\"http://localhost:8080/api/genres\", {\n      method: \"GET\",\n    })\n      .then((res) => {\n        if (res.status !== 200) throw new Error(\"failed to fetch Genres\");\n        return res.json();\n      })\n      .then((resData) => {\n        this.setState({ genres: resData.genres });\n      })\n      .catch(this.catchError);\n  }\n\n  catchError = (err) => {\n    const error = this.state.error;\n    this.setState({ error });\n  };\n\n  // activeGenreHandler = (name, activeStatus) => {\n  //   console.log(name, activeStatus);\n  //   let activeGenres = [...this.state.activeGenres];\n  //   if (!activeStatus) {\n  //     // category is now active so add to the activeGenres\n  //     activeGenres.push(name);\n  //   } else {\n  //     activeGenres = activeGenres.filter((genre) => {\n  //       if (genre !== name) return genre;\n  //     });\n  //   }\n  //   this.setState({ activeGenres });\n  // };\n\n  alertMessageHandler = () => {\n    this.setState({ isAlerted: !this.state.isAlerted });\n  };\n\n  errorHandler = () => {\n    this.setState({ error: null });\n  };\n\n  setAlertMessage = (msg) => {\n    this.setState({ alertMessage: msg });\n  };\n\n  loginHandler = (e, authData) => {\n    e.preventDefault();\n    console.log(\"you are logged in\");\n    this.props.history.push(\"/\");\n    this.setAlertMessage(\"you are logged in\");\n    this.alertMessageHandler();\n  };\n\n  signupHandler = (e, authData) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"profilePicture\", authData.profilePicture.value);\n    formData.append(\"firstName\", authData.firstName.value);\n    formData.append(\"lastName\", authData.lastName.value);\n    formData.append(\"username\", authData.username.value);\n    formData.append(\"email\", authData.email.value);\n    formData.append(\"password\", authData.password.value);\n    console.log(authData);\n    axios\n      .post(\"http://localhost:8080/api/signup\", formData)\n      .then((res) => {\n        // console.log(res);\n        console.log(res.data);\n      })\n      .catch(this.catchError);\n    // console.log(\"new user created\");\n    // this.props.history.push(\"/login\");\n    // this.setAlertMessage(\"you are signed up\");\n    // this.alertMessageHandler();\n  };\n\n  redirectToLogin = () => {\n    this.props.history.replace(\"/login\");\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <Nav appName={this.state.appName} isAuth={this.state.isAuth} />\n        {!this.state.isAlerted && (\n          <Alert\n            alertMessage={this.state.alertMessage}\n            alertMessageHandler={this.alertMessageHandler}\n          />\n        )}\n        {/* <Alert\n          alertMessage={this.state.error}\n          alertMessageHandler={this.alertMessageHandler}\n        /> */}\n\n        <Switch>\n          <Route\n            exact\n            path=\"/write\"\n            render={(props) => (\n              <WritePage\n                {...props}\n                isAuth={this.state.isAuth}\n                redirectToLogin={this.redirectToLogin}\n                genres={this.state.genres}\n                setAlertMessage={this.setAlertMessage}\n                alertMessageHandler={this.alertMessageHandler}\n              />\n            )}\n          />\n          <Route\n            exact\n            path=\"/login\"\n            render={(props) => (\n              <LoginPage {...props} loginHandler={this.loginHandler} />\n            )}\n          />\n          <Route\n            exact\n            path=\"/signup\"\n            render={(props) => (\n              <SignupPage {...props} signupHandler={this.signupHandler} />\n            )}\n          />\n          <Route exact path=\"/profile\" component={ProfilePage} />\n          <Route\n            exact\n            path=\"/\"\n            render={() => <Genres genres={this.state.genres} />}\n          />\n          {/* <Genres\n              activeGenreHandler={this.activeGenreHandler}\n              genres={this.state.genres}\n            /> */}\n          <Route\n            exact\n            path=\"/w/:writingId\"\n            render={(props) => <SingleWritingPage {...props} />}\n          />\n          <Route path=\"/search\">\n            <Route\n              path=\"/:searchQuery\"\n              render={(props) => <div>{props.match.params.searchQuery}</div>}\n            ></Route>\n          </Route>\n          <Route\n            exact\n            path=\"/:genreId\"\n            render={(props) => <Writings {...props} />}\n          />\n        </Switch>\n      </Fragment>\n    );\n  }\n}\n\nexport default withRouter(App);\n// export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/js/bootstrap\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}